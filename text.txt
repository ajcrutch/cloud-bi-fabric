[0m[1mdata.google_service_account_access_token.default: Reading...[0m[0m
[0m[1mdata.google_service_account_access_token.default: Read complete after 0s [id=projects/-/serviceAccounts/terraform@semantics-390012.iam.gserviceaccount.com][0m
[0m[1mdata.google_project.project: Reading...[0m[0m
[0m[1mdata.google_project.project: Read complete after 2s [id=projects/semantics-390012][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m
 [36m<=[0m read (data resources)[0m

Terraform will perform the following actions:

[1m  # google_project_service.apis_to_activate["artifactregistry"][0m will be created
[0m  [32m+[0m[0m resource "google_project_service" "apis_to_activate" {
      [32m+[0m[0m disable_dependent_services = true
      [32m+[0m[0m disable_on_destroy         = true
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m project                    = "semantics-390012"
      [32m+[0m[0m service                    = "artifactregistry.googleapis.com"
    }

[1m  # google_project_service.apis_to_activate["bigquery"][0m will be created
[0m  [32m+[0m[0m resource "google_project_service" "apis_to_activate" {
      [32m+[0m[0m disable_dependent_services = true
      [32m+[0m[0m disable_on_destroy         = true
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m project                    = "semantics-390012"
      [32m+[0m[0m service                    = "bigquery.googleapis.com"
    }

[1m  # google_project_service.apis_to_activate["bigqueryconnection"][0m will be created
[0m  [32m+[0m[0m resource "google_project_service" "apis_to_activate" {
      [32m+[0m[0m disable_dependent_services = true
      [32m+[0m[0m disable_on_destroy         = true
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m project                    = "semantics-390012"
      [32m+[0m[0m service                    = "bigqueryconnection.googleapis.com"
    }

[1m  # google_project_service.apis_to_activate["cloudbuild"][0m will be created
[0m  [32m+[0m[0m resource "google_project_service" "apis_to_activate" {
      [32m+[0m[0m disable_dependent_services = true
      [32m+[0m[0m disable_on_destroy         = true
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m project                    = "semantics-390012"
      [32m+[0m[0m service                    = "cloudbuild.googleapis.com"
    }

[1m  # google_project_service.apis_to_activate["cloudfunctions"][0m will be created
[0m  [32m+[0m[0m resource "google_project_service" "apis_to_activate" {
      [32m+[0m[0m disable_dependent_services = true
      [32m+[0m[0m disable_on_destroy         = true
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m project                    = "semantics-390012"
      [32m+[0m[0m service                    = "cloudfunctions.googleapis.com"
    }

[1m  # google_project_service.apis_to_activate["cloudresourcemanager"][0m will be created
[0m  [32m+[0m[0m resource "google_project_service" "apis_to_activate" {
      [32m+[0m[0m disable_dependent_services = true
      [32m+[0m[0m disable_on_destroy         = true
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m project                    = "semantics-390012"
      [32m+[0m[0m service                    = "cloudresourcemanager.googleapis.com"
    }

[1m  # google_project_service.apis_to_activate["datacatalog"][0m will be created
[0m  [32m+[0m[0m resource "google_project_service" "apis_to_activate" {
      [32m+[0m[0m disable_dependent_services = true
      [32m+[0m[0m disable_on_destroy         = true
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m project                    = "semantics-390012"
      [32m+[0m[0m service                    = "datacatalog.googleapis.com"
    }

[1m  # google_project_service.apis_to_activate["dataplex"][0m will be created
[0m  [32m+[0m[0m resource "google_project_service" "apis_to_activate" {
      [32m+[0m[0m disable_dependent_services = true
      [32m+[0m[0m disable_on_destroy         = true
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m project                    = "semantics-390012"
      [32m+[0m[0m service                    = "dataplex.googleapis.com"
    }

[1m  # google_project_service.apis_to_activate["eventarc"][0m will be created
[0m  [32m+[0m[0m resource "google_project_service" "apis_to_activate" {
      [32m+[0m[0m disable_dependent_services = true
      [32m+[0m[0m disable_on_destroy         = true
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m project                    = "semantics-390012"
      [32m+[0m[0m service                    = "eventarc.googleapis.com"
    }

[1m  # google_project_service.apis_to_activate["iam"][0m will be created
[0m  [32m+[0m[0m resource "google_project_service" "apis_to_activate" {
      [32m+[0m[0m disable_dependent_services = true
      [32m+[0m[0m disable_on_destroy         = true
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m project                    = "semantics-390012"
      [32m+[0m[0m service                    = "iam.googleapis.com"
    }

[1m  # google_project_service.apis_to_activate["logging"][0m will be created
[0m  [32m+[0m[0m resource "google_project_service" "apis_to_activate" {
      [32m+[0m[0m disable_dependent_services = true
      [32m+[0m[0m disable_on_destroy         = true
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m project                    = "semantics-390012"
      [32m+[0m[0m service                    = "logging.googleapis.com"
    }

[1m  # google_project_service.apis_to_activate["pubsub"][0m will be created
[0m  [32m+[0m[0m resource "google_project_service" "apis_to_activate" {
      [32m+[0m[0m disable_dependent_services = true
      [32m+[0m[0m disable_on_destroy         = true
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m project                    = "semantics-390012"
      [32m+[0m[0m service                    = "pubsub.googleapis.com"
    }

[1m  # google_project_service.apis_to_activate["run"][0m will be created
[0m  [32m+[0m[0m resource "google_project_service" "apis_to_activate" {
      [32m+[0m[0m disable_dependent_services = true
      [32m+[0m[0m disable_on_destroy         = true
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m project                    = "semantics-390012"
      [32m+[0m[0m service                    = "run.googleapis.com"
    }

[1m  # google_storage_bucket.resources_bucket[0m will be created
[0m  [32m+[0m[0m resource "google_storage_bucket" "resources_bucket" {
      [32m+[0m[0m force_destroy               = true
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m labels                      = (known after apply)
      [32m+[0m[0m location                    = "EUROPE-WEST3"
      [32m+[0m[0m name                        = "semantics-390012-resources"
      [32m+[0m[0m project                     = (known after apply)
      [32m+[0m[0m public_access_prevention    = (known after apply)
      [32m+[0m[0m self_link                   = (known after apply)
      [32m+[0m[0m storage_class               = "STANDARD"
      [32m+[0m[0m uniform_bucket_level_access = true
      [32m+[0m[0m url                         = (known after apply)
    }

[1m  # module.bi_service_account[0].google_project_iam_member.service_account_roles[0m will be created
[0m  [32m+[0m[0m resource "google_project_iam_member" "service_account_roles" {
      [32m+[0m[0m etag    = (known after apply)
      [32m+[0m[0m id      = (known after apply)
      [32m+[0m[0m member  = (known after apply)
      [32m+[0m[0m project = "semantics-390012"
      [32m+[0m[0m role    = "roles/bigquery.jobUser"
    }

[1m  # module.bi_service_account[0].google_service_account.service_account[0m will be created
[0m  [32m+[0m[0m resource "google_service_account" "service_account" {
      [32m+[0m[0m account_id   = "bi-service-account"
      [32m+[0m[0m disabled     = false
      [32m+[0m[0m display_name = "SA to be used for BI connection (Looker)"
      [32m+[0m[0m email        = (known after apply)
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m member       = (known after apply)
      [32m+[0m[0m name         = (known after apply)
      [32m+[0m[0m project      = "semantics-390012"
      [32m+[0m[0m unique_id    = (known after apply)
    }

[1m  # module.bi_service_account[1].google_project_iam_member.service_account_roles[0m will be created
[0m  [32m+[0m[0m resource "google_project_iam_member" "service_account_roles" {
      [32m+[0m[0m etag    = (known after apply)
      [32m+[0m[0m id      = (known after apply)
      [32m+[0m[0m member  = (known after apply)
      [32m+[0m[0m project = "semantics-390012"
      [32m+[0m[0m role    = "roles/bigquery.viewer"
    }

[1m  # module.bi_service_account[1].google_service_account.service_account[0m will be created
[0m  [32m+[0m[0m resource "google_service_account" "service_account" {
      [32m+[0m[0m account_id   = "bi-service-account"
      [32m+[0m[0m disabled     = false
      [32m+[0m[0m display_name = "SA to be used for BI connection (Looker)"
      [32m+[0m[0m email        = (known after apply)
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m member       = (known after apply)
      [32m+[0m[0m name         = (known after apply)
      [32m+[0m[0m project      = "semantics-390012"
      [32m+[0m[0m unique_id    = (known after apply)
    }

[1m  # module.bi_service_account[2].google_project_iam_member.service_account_roles[0m will be created
[0m  [32m+[0m[0m resource "google_project_iam_member" "service_account_roles" {
      [32m+[0m[0m etag    = (known after apply)
      [32m+[0m[0m id      = (known after apply)
      [32m+[0m[0m member  = (known after apply)
      [32m+[0m[0m project = "semantics-390012"
      [32m+[0m[0m role    = "roles/bigquery.dataEditor"
    }

[1m  # module.bi_service_account[2].google_service_account.service_account[0m will be created
[0m  [32m+[0m[0m resource "google_service_account" "service_account" {
      [32m+[0m[0m account_id   = "bi-service-account"
      [32m+[0m[0m disabled     = false
      [32m+[0m[0m display_name = "SA to be used for BI connection (Looker)"
      [32m+[0m[0m email        = (known after apply)
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m member       = (known after apply)
      [32m+[0m[0m name         = (known after apply)
      [32m+[0m[0m project      = "semantics-390012"
      [32m+[0m[0m unique_id    = (known after apply)
    }

[1m  # module.bigquery[0].google_bigquery_dataset.dataset[0m will be created
[0m  [32m+[0m[0m resource "google_bigquery_dataset" "dataset" {
      [32m+[0m[0m creation_time              = (known after apply)
      [32m+[0m[0m dataset_id                 = "marketing-source_aligned"
      [32m+[0m[0m default_collation          = (known after apply)
      [32m+[0m[0m delete_contents_on_destroy = false
      [32m+[0m[0m etag                       = (known after apply)
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m is_case_insensitive        = (known after apply)
      [32m+[0m[0m labels                     = {
          [32m+[0m[0m "domain"         = "marketing"
          [32m+[0m[0m "level"          = "source_aligned"
          [32m+[0m[0m "provisioned_by" = "terraform"
        }
      [32m+[0m[0m last_modified_time         = (known after apply)
      [32m+[0m[0m location                   = "europe-west3"
      [32m+[0m[0m max_time_travel_hours      = (known after apply)
      [32m+[0m[0m project                    = "semantics-390012"
      [32m+[0m[0m self_link                  = (known after apply)
    }

[1m  # module.bigquery[0].google_dataplex_asset.asset[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_asset" "asset" {
      [32m+[0m[0m create_time      = (known after apply)
      [32m+[0m[0m dataplex_zone    = "source_aligned"
      [32m+[0m[0m discovery_status = (known after apply)
      [32m+[0m[0m display_name     = "marketing-source_aligned Dataset Asset"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m labels           = {
          [32m+[0m[0m "domain" = "marketing"
          [32m+[0m[0m "level"  = "source_aligned"
        }
      [32m+[0m[0m lake             = "marketing"
      [32m+[0m[0m location         = "europe-west3"
      [32m+[0m[0m name             = "marketing-source_aligned_dataset"
      [32m+[0m[0m project          = "semantics-390012"
      [32m+[0m[0m resource_status  = (known after apply)
      [32m+[0m[0m security_status  = (known after apply)
      [32m+[0m[0m state            = (known after apply)
      [32m+[0m[0m uid              = (known after apply)
      [32m+[0m[0m update_time      = (known after apply)

      [32m+[0m[0m discovery_spec {
          [32m+[0m[0m enabled = true
        }

      [32m+[0m[0m resource_spec {
          [32m+[0m[0m name = (known after apply)
          [32m+[0m[0m type = "BIGQUERY_DATASET"
        }
    }

[1m  # module.bigquery[0].google_dataplex_lake.lake[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_lake" "lake" {
      [32m+[0m[0m asset_status     = (known after apply)
      [32m+[0m[0m create_time      = (known after apply)
      [32m+[0m[0m display_name     = "Data Lake for marketing domain"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m labels           = {
          [32m+[0m[0m "domain" = "marketing"
        }
      [32m+[0m[0m location         = "europe-west3"
      [32m+[0m[0m metastore_status = (known after apply)
      [32m+[0m[0m name             = "marketing"
      [32m+[0m[0m project          = "semantics-390012"
      [32m+[0m[0m service_account  = (known after apply)
      [32m+[0m[0m state            = (known after apply)
      [32m+[0m[0m uid              = (known after apply)
      [32m+[0m[0m update_time      = (known after apply)
    }

[1m  # module.bigquery[0].google_dataplex_zone.zone[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_zone" "zone" {
      [32m+[0m[0m asset_status = (known after apply)
      [32m+[0m[0m create_time  = (known after apply)
      [32m+[0m[0m display_name = "Zone for source_aligned data"
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m labels       = {
          [32m+[0m[0m "level" = "source_aligned"
        }
      [32m+[0m[0m lake         = "marketing"
      [32m+[0m[0m location     = "europe-west3"
      [32m+[0m[0m name         = "source_aligned"
      [32m+[0m[0m project      = "semantics-390012"
      [32m+[0m[0m state        = (known after apply)
      [32m+[0m[0m type         = "CURATED"
      [32m+[0m[0m uid          = (known after apply)
      [32m+[0m[0m update_time  = (known after apply)

      [32m+[0m[0m discovery_spec {
          [32m+[0m[0m enabled  = true
          [32m+[0m[0m schedule = (known after apply)
        }

      [32m+[0m[0m resource_spec {
          [32m+[0m[0m location_type = "SINGLE_REGION"
        }
    }

[1m  # module.bigquery[1].google_bigquery_dataset.dataset[0m will be created
[0m  [32m+[0m[0m resource "google_bigquery_dataset" "dataset" {
      [32m+[0m[0m creation_time              = (known after apply)
      [32m+[0m[0m dataset_id                 = "marketing-transformed"
      [32m+[0m[0m default_collation          = (known after apply)
      [32m+[0m[0m delete_contents_on_destroy = false
      [32m+[0m[0m etag                       = (known after apply)
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m is_case_insensitive        = (known after apply)
      [32m+[0m[0m labels                     = {
          [32m+[0m[0m "domain"         = "marketing"
          [32m+[0m[0m "level"          = "transformed"
          [32m+[0m[0m "provisioned_by" = "terraform"
        }
      [32m+[0m[0m last_modified_time         = (known after apply)
      [32m+[0m[0m location                   = "europe-west3"
      [32m+[0m[0m max_time_travel_hours      = (known after apply)
      [32m+[0m[0m project                    = "semantics-390012"
      [32m+[0m[0m self_link                  = (known after apply)
    }

[1m  # module.bigquery[1].google_dataplex_asset.asset[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_asset" "asset" {
      [32m+[0m[0m create_time      = (known after apply)
      [32m+[0m[0m dataplex_zone    = "transformed"
      [32m+[0m[0m discovery_status = (known after apply)
      [32m+[0m[0m display_name     = "marketing-transformed Dataset Asset"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m labels           = {
          [32m+[0m[0m "domain" = "marketing"
          [32m+[0m[0m "level"  = "transformed"
        }
      [32m+[0m[0m lake             = "marketing"
      [32m+[0m[0m location         = "europe-west3"
      [32m+[0m[0m name             = "marketing-transformed_dataset"
      [32m+[0m[0m project          = "semantics-390012"
      [32m+[0m[0m resource_status  = (known after apply)
      [32m+[0m[0m security_status  = (known after apply)
      [32m+[0m[0m state            = (known after apply)
      [32m+[0m[0m uid              = (known after apply)
      [32m+[0m[0m update_time      = (known after apply)

      [32m+[0m[0m discovery_spec {
          [32m+[0m[0m enabled = true
        }

      [32m+[0m[0m resource_spec {
          [32m+[0m[0m name = (known after apply)
          [32m+[0m[0m type = "BIGQUERY_DATASET"
        }
    }

[1m  # module.bigquery[1].google_dataplex_lake.lake[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_lake" "lake" {
      [32m+[0m[0m asset_status     = (known after apply)
      [32m+[0m[0m create_time      = (known after apply)
      [32m+[0m[0m display_name     = "Data Lake for marketing domain"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m labels           = {
          [32m+[0m[0m "domain" = "marketing"
        }
      [32m+[0m[0m location         = "europe-west3"
      [32m+[0m[0m metastore_status = (known after apply)
      [32m+[0m[0m name             = "marketing"
      [32m+[0m[0m project          = "semantics-390012"
      [32m+[0m[0m service_account  = (known after apply)
      [32m+[0m[0m state            = (known after apply)
      [32m+[0m[0m uid              = (known after apply)
      [32m+[0m[0m update_time      = (known after apply)
    }

[1m  # module.bigquery[1].google_dataplex_zone.zone[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_zone" "zone" {
      [32m+[0m[0m asset_status = (known after apply)
      [32m+[0m[0m create_time  = (known after apply)
      [32m+[0m[0m display_name = "Zone for transformed data"
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m labels       = {
          [32m+[0m[0m "level" = "transformed"
        }
      [32m+[0m[0m lake         = "marketing"
      [32m+[0m[0m location     = "europe-west3"
      [32m+[0m[0m name         = "transformed"
      [32m+[0m[0m project      = "semantics-390012"
      [32m+[0m[0m state        = (known after apply)
      [32m+[0m[0m type         = "CURATED"
      [32m+[0m[0m uid          = (known after apply)
      [32m+[0m[0m update_time  = (known after apply)

      [32m+[0m[0m discovery_spec {
          [32m+[0m[0m enabled  = true
          [32m+[0m[0m schedule = (known after apply)
        }

      [32m+[0m[0m resource_spec {
          [32m+[0m[0m location_type = "SINGLE_REGION"
        }
    }

[1m  # module.bigquery[2].google_bigquery_dataset.dataset[0m will be created
[0m  [32m+[0m[0m resource "google_bigquery_dataset" "dataset" {
      [32m+[0m[0m creation_time              = (known after apply)
      [32m+[0m[0m dataset_id                 = "marketing-analytical"
      [32m+[0m[0m default_collation          = (known after apply)
      [32m+[0m[0m delete_contents_on_destroy = false
      [32m+[0m[0m etag                       = (known after apply)
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m is_case_insensitive        = (known after apply)
      [32m+[0m[0m labels                     = {
          [32m+[0m[0m "domain"         = "marketing"
          [32m+[0m[0m "level"          = "analytical"
          [32m+[0m[0m "provisioned_by" = "terraform"
        }
      [32m+[0m[0m last_modified_time         = (known after apply)
      [32m+[0m[0m location                   = "europe-west3"
      [32m+[0m[0m max_time_travel_hours      = (known after apply)
      [32m+[0m[0m project                    = "semantics-390012"
      [32m+[0m[0m self_link                  = (known after apply)
    }

[1m  # module.bigquery[2].google_dataplex_asset.asset[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_asset" "asset" {
      [32m+[0m[0m create_time      = (known after apply)
      [32m+[0m[0m dataplex_zone    = "analytical"
      [32m+[0m[0m discovery_status = (known after apply)
      [32m+[0m[0m display_name     = "marketing-analytical Dataset Asset"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m labels           = {
          [32m+[0m[0m "domain" = "marketing"
          [32m+[0m[0m "level"  = "analytical"
        }
      [32m+[0m[0m lake             = "marketing"
      [32m+[0m[0m location         = "europe-west3"
      [32m+[0m[0m name             = "marketing-analytical_dataset"
      [32m+[0m[0m project          = "semantics-390012"
      [32m+[0m[0m resource_status  = (known after apply)
      [32m+[0m[0m security_status  = (known after apply)
      [32m+[0m[0m state            = (known after apply)
      [32m+[0m[0m uid              = (known after apply)
      [32m+[0m[0m update_time      = (known after apply)

      [32m+[0m[0m discovery_spec {
          [32m+[0m[0m enabled = true
        }

      [32m+[0m[0m resource_spec {
          [32m+[0m[0m name = (known after apply)
          [32m+[0m[0m type = "BIGQUERY_DATASET"
        }
    }

[1m  # module.bigquery[2].google_dataplex_lake.lake[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_lake" "lake" {
      [32m+[0m[0m asset_status     = (known after apply)
      [32m+[0m[0m create_time      = (known after apply)
      [32m+[0m[0m display_name     = "Data Lake for marketing domain"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m labels           = {
          [32m+[0m[0m "domain" = "marketing"
        }
      [32m+[0m[0m location         = "europe-west3"
      [32m+[0m[0m metastore_status = (known after apply)
      [32m+[0m[0m name             = "marketing"
      [32m+[0m[0m project          = "semantics-390012"
      [32m+[0m[0m service_account  = (known after apply)
      [32m+[0m[0m state            = (known after apply)
      [32m+[0m[0m uid              = (known after apply)
      [32m+[0m[0m update_time      = (known after apply)
    }

[1m  # module.bigquery[2].google_dataplex_zone.zone[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_zone" "zone" {
      [32m+[0m[0m asset_status = (known after apply)
      [32m+[0m[0m create_time  = (known after apply)
      [32m+[0m[0m display_name = "Zone for analytical data"
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m labels       = {
          [32m+[0m[0m "level" = "analytical"
        }
      [32m+[0m[0m lake         = "marketing"
      [32m+[0m[0m location     = "europe-west3"
      [32m+[0m[0m name         = "analytical"
      [32m+[0m[0m project      = "semantics-390012"
      [32m+[0m[0m state        = (known after apply)
      [32m+[0m[0m type         = "CURATED"
      [32m+[0m[0m uid          = (known after apply)
      [32m+[0m[0m update_time  = (known after apply)

      [32m+[0m[0m discovery_spec {
          [32m+[0m[0m enabled  = true
          [32m+[0m[0m schedule = (known after apply)
        }

      [32m+[0m[0m resource_spec {
          [32m+[0m[0m location_type = "SINGLE_REGION"
        }
    }

[1m  # module.bigquery[3].google_bigquery_dataset.dataset[0m will be created
[0m  [32m+[0m[0m resource "google_bigquery_dataset" "dataset" {
      [32m+[0m[0m creation_time              = (known after apply)
      [32m+[0m[0m dataset_id                 = "marketing-resources"
      [32m+[0m[0m default_collation          = (known after apply)
      [32m+[0m[0m delete_contents_on_destroy = false
      [32m+[0m[0m etag                       = (known after apply)
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m is_case_insensitive        = (known after apply)
      [32m+[0m[0m labels                     = {
          [32m+[0m[0m "domain"         = "marketing"
          [32m+[0m[0m "level"          = "resources"
          [32m+[0m[0m "provisioned_by" = "terraform"
        }
      [32m+[0m[0m last_modified_time         = (known after apply)
      [32m+[0m[0m location                   = "europe-west3"
      [32m+[0m[0m max_time_travel_hours      = (known after apply)
      [32m+[0m[0m project                    = "semantics-390012"
      [32m+[0m[0m self_link                  = (known after apply)
    }

[1m  # module.bigquery[3].google_dataplex_asset.asset[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_asset" "asset" {
      [32m+[0m[0m create_time      = (known after apply)
      [32m+[0m[0m dataplex_zone    = "resources"
      [32m+[0m[0m discovery_status = (known after apply)
      [32m+[0m[0m display_name     = "marketing-resources Dataset Asset"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m labels           = {
          [32m+[0m[0m "domain" = "marketing"
          [32m+[0m[0m "level"  = "resources"
        }
      [32m+[0m[0m lake             = "marketing"
      [32m+[0m[0m location         = "europe-west3"
      [32m+[0m[0m name             = "marketing-resources_dataset"
      [32m+[0m[0m project          = "semantics-390012"
      [32m+[0m[0m resource_status  = (known after apply)
      [32m+[0m[0m security_status  = (known after apply)
      [32m+[0m[0m state            = (known after apply)
      [32m+[0m[0m uid              = (known after apply)
      [32m+[0m[0m update_time      = (known after apply)

      [32m+[0m[0m discovery_spec {
          [32m+[0m[0m enabled = true
        }

      [32m+[0m[0m resource_spec {
          [32m+[0m[0m name = (known after apply)
          [32m+[0m[0m type = "BIGQUERY_DATASET"
        }
    }

[1m  # module.bigquery[3].google_dataplex_lake.lake[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_lake" "lake" {
      [32m+[0m[0m asset_status     = (known after apply)
      [32m+[0m[0m create_time      = (known after apply)
      [32m+[0m[0m display_name     = "Data Lake for marketing domain"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m labels           = {
          [32m+[0m[0m "domain" = "marketing"
        }
      [32m+[0m[0m location         = "europe-west3"
      [32m+[0m[0m metastore_status = (known after apply)
      [32m+[0m[0m name             = "marketing"
      [32m+[0m[0m project          = "semantics-390012"
      [32m+[0m[0m service_account  = (known after apply)
      [32m+[0m[0m state            = (known after apply)
      [32m+[0m[0m uid              = (known after apply)
      [32m+[0m[0m update_time      = (known after apply)
    }

[1m  # module.bigquery[3].google_dataplex_zone.zone[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_zone" "zone" {
      [32m+[0m[0m asset_status = (known after apply)
      [32m+[0m[0m create_time  = (known after apply)
      [32m+[0m[0m display_name = "Zone for resources data"
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m labels       = {
          [32m+[0m[0m "level" = "resources"
        }
      [32m+[0m[0m lake         = "marketing"
      [32m+[0m[0m location     = "europe-west3"
      [32m+[0m[0m name         = "resources"
      [32m+[0m[0m project      = "semantics-390012"
      [32m+[0m[0m state        = (known after apply)
      [32m+[0m[0m type         = "CURATED"
      [32m+[0m[0m uid          = (known after apply)
      [32m+[0m[0m update_time  = (known after apply)

      [32m+[0m[0m discovery_spec {
          [32m+[0m[0m enabled  = true
          [32m+[0m[0m schedule = (known after apply)
        }

      [32m+[0m[0m resource_spec {
          [32m+[0m[0m location_type = "SINGLE_REGION"
        }
    }

[1m  # module.bigquery[4].google_bigquery_dataset.dataset[0m will be created
[0m  [32m+[0m[0m resource "google_bigquery_dataset" "dataset" {
      [32m+[0m[0m creation_time              = (known after apply)
      [32m+[0m[0m dataset_id                 = "sales-source_aligned"
      [32m+[0m[0m default_collation          = (known after apply)
      [32m+[0m[0m delete_contents_on_destroy = false
      [32m+[0m[0m etag                       = (known after apply)
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m is_case_insensitive        = (known after apply)
      [32m+[0m[0m labels                     = {
          [32m+[0m[0m "domain"         = "sales"
          [32m+[0m[0m "level"          = "source_aligned"
          [32m+[0m[0m "provisioned_by" = "terraform"
        }
      [32m+[0m[0m last_modified_time         = (known after apply)
      [32m+[0m[0m location                   = "europe-west3"
      [32m+[0m[0m max_time_travel_hours      = (known after apply)
      [32m+[0m[0m project                    = "semantics-390012"
      [32m+[0m[0m self_link                  = (known after apply)
    }

[1m  # module.bigquery[4].google_dataplex_asset.asset[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_asset" "asset" {
      [32m+[0m[0m create_time      = (known after apply)
      [32m+[0m[0m dataplex_zone    = "source_aligned"
      [32m+[0m[0m discovery_status = (known after apply)
      [32m+[0m[0m display_name     = "sales-source_aligned Dataset Asset"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m labels           = {
          [32m+[0m[0m "domain" = "sales"
          [32m+[0m[0m "level"  = "source_aligned"
        }
      [32m+[0m[0m lake             = "sales"
      [32m+[0m[0m location         = "europe-west3"
      [32m+[0m[0m name             = "sales-source_aligned_dataset"
      [32m+[0m[0m project          = "semantics-390012"
      [32m+[0m[0m resource_status  = (known after apply)
      [32m+[0m[0m security_status  = (known after apply)
      [32m+[0m[0m state            = (known after apply)
      [32m+[0m[0m uid              = (known after apply)
      [32m+[0m[0m update_time      = (known after apply)

      [32m+[0m[0m discovery_spec {
          [32m+[0m[0m enabled = true
        }

      [32m+[0m[0m resource_spec {
          [32m+[0m[0m name = (known after apply)
          [32m+[0m[0m type = "BIGQUERY_DATASET"
        }
    }

[1m  # module.bigquery[4].google_dataplex_lake.lake[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_lake" "lake" {
      [32m+[0m[0m asset_status     = (known after apply)
      [32m+[0m[0m create_time      = (known after apply)
      [32m+[0m[0m display_name     = "Data Lake for sales domain"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m labels           = {
          [32m+[0m[0m "domain" = "sales"
        }
      [32m+[0m[0m location         = "europe-west3"
      [32m+[0m[0m metastore_status = (known after apply)
      [32m+[0m[0m name             = "sales"
      [32m+[0m[0m project          = "semantics-390012"
      [32m+[0m[0m service_account  = (known after apply)
      [32m+[0m[0m state            = (known after apply)
      [32m+[0m[0m uid              = (known after apply)
      [32m+[0m[0m update_time      = (known after apply)
    }

[1m  # module.bigquery[4].google_dataplex_zone.zone[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_zone" "zone" {
      [32m+[0m[0m asset_status = (known after apply)
      [32m+[0m[0m create_time  = (known after apply)
      [32m+[0m[0m display_name = "Zone for source_aligned data"
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m labels       = {
          [32m+[0m[0m "level" = "source_aligned"
        }
      [32m+[0m[0m lake         = "sales"
      [32m+[0m[0m location     = "europe-west3"
      [32m+[0m[0m name         = "source_aligned"
      [32m+[0m[0m project      = "semantics-390012"
      [32m+[0m[0m state        = (known after apply)
      [32m+[0m[0m type         = "CURATED"
      [32m+[0m[0m uid          = (known after apply)
      [32m+[0m[0m update_time  = (known after apply)

      [32m+[0m[0m discovery_spec {
          [32m+[0m[0m enabled  = true
          [32m+[0m[0m schedule = (known after apply)
        }

      [32m+[0m[0m resource_spec {
          [32m+[0m[0m location_type = "SINGLE_REGION"
        }
    }

[1m  # module.bigquery[5].google_bigquery_dataset.dataset[0m will be created
[0m  [32m+[0m[0m resource "google_bigquery_dataset" "dataset" {
      [32m+[0m[0m creation_time              = (known after apply)
      [32m+[0m[0m dataset_id                 = "sales-transformed"
      [32m+[0m[0m default_collation          = (known after apply)
      [32m+[0m[0m delete_contents_on_destroy = false
      [32m+[0m[0m etag                       = (known after apply)
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m is_case_insensitive        = (known after apply)
      [32m+[0m[0m labels                     = {
          [32m+[0m[0m "domain"         = "sales"
          [32m+[0m[0m "level"          = "transformed"
          [32m+[0m[0m "provisioned_by" = "terraform"
        }
      [32m+[0m[0m last_modified_time         = (known after apply)
      [32m+[0m[0m location                   = "europe-west3"
      [32m+[0m[0m max_time_travel_hours      = (known after apply)
      [32m+[0m[0m project                    = "semantics-390012"
      [32m+[0m[0m self_link                  = (known after apply)
    }

[1m  # module.bigquery[5].google_dataplex_asset.asset[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_asset" "asset" {
      [32m+[0m[0m create_time      = (known after apply)
      [32m+[0m[0m dataplex_zone    = "transformed"
      [32m+[0m[0m discovery_status = (known after apply)
      [32m+[0m[0m display_name     = "sales-transformed Dataset Asset"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m labels           = {
          [32m+[0m[0m "domain" = "sales"
          [32m+[0m[0m "level"  = "transformed"
        }
      [32m+[0m[0m lake             = "sales"
      [32m+[0m[0m location         = "europe-west3"
      [32m+[0m[0m name             = "sales-transformed_dataset"
      [32m+[0m[0m project          = "semantics-390012"
      [32m+[0m[0m resource_status  = (known after apply)
      [32m+[0m[0m security_status  = (known after apply)
      [32m+[0m[0m state            = (known after apply)
      [32m+[0m[0m uid              = (known after apply)
      [32m+[0m[0m update_time      = (known after apply)

      [32m+[0m[0m discovery_spec {
          [32m+[0m[0m enabled = true
        }

      [32m+[0m[0m resource_spec {
          [32m+[0m[0m name = (known after apply)
          [32m+[0m[0m type = "BIGQUERY_DATASET"
        }
    }

[1m  # module.bigquery[5].google_dataplex_lake.lake[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_lake" "lake" {
      [32m+[0m[0m asset_status     = (known after apply)
      [32m+[0m[0m create_time      = (known after apply)
      [32m+[0m[0m display_name     = "Data Lake for sales domain"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m labels           = {
          [32m+[0m[0m "domain" = "sales"
        }
      [32m+[0m[0m location         = "europe-west3"
      [32m+[0m[0m metastore_status = (known after apply)
      [32m+[0m[0m name             = "sales"
      [32m+[0m[0m project          = "semantics-390012"
      [32m+[0m[0m service_account  = (known after apply)
      [32m+[0m[0m state            = (known after apply)
      [32m+[0m[0m uid              = (known after apply)
      [32m+[0m[0m update_time      = (known after apply)
    }

[1m  # module.bigquery[5].google_dataplex_zone.zone[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_zone" "zone" {
      [32m+[0m[0m asset_status = (known after apply)
      [32m+[0m[0m create_time  = (known after apply)
      [32m+[0m[0m display_name = "Zone for transformed data"
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m labels       = {
          [32m+[0m[0m "level" = "transformed"
        }
      [32m+[0m[0m lake         = "sales"
      [32m+[0m[0m location     = "europe-west3"
      [32m+[0m[0m name         = "transformed"
      [32m+[0m[0m project      = "semantics-390012"
      [32m+[0m[0m state        = (known after apply)
      [32m+[0m[0m type         = "CURATED"
      [32m+[0m[0m uid          = (known after apply)
      [32m+[0m[0m update_time  = (known after apply)

      [32m+[0m[0m discovery_spec {
          [32m+[0m[0m enabled  = true
          [32m+[0m[0m schedule = (known after apply)
        }

      [32m+[0m[0m resource_spec {
          [32m+[0m[0m location_type = "SINGLE_REGION"
        }
    }

[1m  # module.bigquery[6].google_bigquery_dataset.dataset[0m will be created
[0m  [32m+[0m[0m resource "google_bigquery_dataset" "dataset" {
      [32m+[0m[0m creation_time              = (known after apply)
      [32m+[0m[0m dataset_id                 = "sales-analytical"
      [32m+[0m[0m default_collation          = (known after apply)
      [32m+[0m[0m delete_contents_on_destroy = false
      [32m+[0m[0m etag                       = (known after apply)
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m is_case_insensitive        = (known after apply)
      [32m+[0m[0m labels                     = {
          [32m+[0m[0m "domain"         = "sales"
          [32m+[0m[0m "level"          = "analytical"
          [32m+[0m[0m "provisioned_by" = "terraform"
        }
      [32m+[0m[0m last_modified_time         = (known after apply)
      [32m+[0m[0m location                   = "europe-west3"
      [32m+[0m[0m max_time_travel_hours      = (known after apply)
      [32m+[0m[0m project                    = "semantics-390012"
      [32m+[0m[0m self_link                  = (known after apply)
    }

[1m  # module.bigquery[6].google_dataplex_asset.asset[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_asset" "asset" {
      [32m+[0m[0m create_time      = (known after apply)
      [32m+[0m[0m dataplex_zone    = "analytical"
      [32m+[0m[0m discovery_status = (known after apply)
      [32m+[0m[0m display_name     = "sales-analytical Dataset Asset"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m labels           = {
          [32m+[0m[0m "domain" = "sales"
          [32m+[0m[0m "level"  = "analytical"
        }
      [32m+[0m[0m lake             = "sales"
      [32m+[0m[0m location         = "europe-west3"
      [32m+[0m[0m name             = "sales-analytical_dataset"
      [32m+[0m[0m project          = "semantics-390012"
      [32m+[0m[0m resource_status  = (known after apply)
      [32m+[0m[0m security_status  = (known after apply)
      [32m+[0m[0m state            = (known after apply)
      [32m+[0m[0m uid              = (known after apply)
      [32m+[0m[0m update_time      = (known after apply)

      [32m+[0m[0m discovery_spec {
          [32m+[0m[0m enabled = true
        }

      [32m+[0m[0m resource_spec {
          [32m+[0m[0m name = (known after apply)
          [32m+[0m[0m type = "BIGQUERY_DATASET"
        }
    }

[1m  # module.bigquery[6].google_dataplex_lake.lake[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_lake" "lake" {
      [32m+[0m[0m asset_status     = (known after apply)
      [32m+[0m[0m create_time      = (known after apply)
      [32m+[0m[0m display_name     = "Data Lake for sales domain"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m labels           = {
          [32m+[0m[0m "domain" = "sales"
        }
      [32m+[0m[0m location         = "europe-west3"
      [32m+[0m[0m metastore_status = (known after apply)
      [32m+[0m[0m name             = "sales"
      [32m+[0m[0m project          = "semantics-390012"
      [32m+[0m[0m service_account  = (known after apply)
      [32m+[0m[0m state            = (known after apply)
      [32m+[0m[0m uid              = (known after apply)
      [32m+[0m[0m update_time      = (known after apply)
    }

[1m  # module.bigquery[6].google_dataplex_zone.zone[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_zone" "zone" {
      [32m+[0m[0m asset_status = (known after apply)
      [32m+[0m[0m create_time  = (known after apply)
      [32m+[0m[0m display_name = "Zone for analytical data"
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m labels       = {
          [32m+[0m[0m "level" = "analytical"
        }
      [32m+[0m[0m lake         = "sales"
      [32m+[0m[0m location     = "europe-west3"
      [32m+[0m[0m name         = "analytical"
      [32m+[0m[0m project      = "semantics-390012"
      [32m+[0m[0m state        = (known after apply)
      [32m+[0m[0m type         = "CURATED"
      [32m+[0m[0m uid          = (known after apply)
      [32m+[0m[0m update_time  = (known after apply)

      [32m+[0m[0m discovery_spec {
          [32m+[0m[0m enabled  = true
          [32m+[0m[0m schedule = (known after apply)
        }

      [32m+[0m[0m resource_spec {
          [32m+[0m[0m location_type = "SINGLE_REGION"
        }
    }

[1m  # module.bigquery[7].google_bigquery_dataset.dataset[0m will be created
[0m  [32m+[0m[0m resource "google_bigquery_dataset" "dataset" {
      [32m+[0m[0m creation_time              = (known after apply)
      [32m+[0m[0m dataset_id                 = "sales-resources"
      [32m+[0m[0m default_collation          = (known after apply)
      [32m+[0m[0m delete_contents_on_destroy = false
      [32m+[0m[0m etag                       = (known after apply)
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m is_case_insensitive        = (known after apply)
      [32m+[0m[0m labels                     = {
          [32m+[0m[0m "domain"         = "sales"
          [32m+[0m[0m "level"          = "resources"
          [32m+[0m[0m "provisioned_by" = "terraform"
        }
      [32m+[0m[0m last_modified_time         = (known after apply)
      [32m+[0m[0m location                   = "europe-west3"
      [32m+[0m[0m max_time_travel_hours      = (known after apply)
      [32m+[0m[0m project                    = "semantics-390012"
      [32m+[0m[0m self_link                  = (known after apply)
    }

[1m  # module.bigquery[7].google_dataplex_asset.asset[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_asset" "asset" {
      [32m+[0m[0m create_time      = (known after apply)
      [32m+[0m[0m dataplex_zone    = "resources"
      [32m+[0m[0m discovery_status = (known after apply)
      [32m+[0m[0m display_name     = "sales-resources Dataset Asset"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m labels           = {
          [32m+[0m[0m "domain" = "sales"
          [32m+[0m[0m "level"  = "resources"
        }
      [32m+[0m[0m lake             = "sales"
      [32m+[0m[0m location         = "europe-west3"
      [32m+[0m[0m name             = "sales-resources_dataset"
      [32m+[0m[0m project          = "semantics-390012"
      [32m+[0m[0m resource_status  = (known after apply)
      [32m+[0m[0m security_status  = (known after apply)
      [32m+[0m[0m state            = (known after apply)
      [32m+[0m[0m uid              = (known after apply)
      [32m+[0m[0m update_time      = (known after apply)

      [32m+[0m[0m discovery_spec {
          [32m+[0m[0m enabled = true
        }

      [32m+[0m[0m resource_spec {
          [32m+[0m[0m name = (known after apply)
          [32m+[0m[0m type = "BIGQUERY_DATASET"
        }
    }

[1m  # module.bigquery[7].google_dataplex_lake.lake[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_lake" "lake" {
      [32m+[0m[0m asset_status     = (known after apply)
      [32m+[0m[0m create_time      = (known after apply)
      [32m+[0m[0m display_name     = "Data Lake for sales domain"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m labels           = {
          [32m+[0m[0m "domain" = "sales"
        }
      [32m+[0m[0m location         = "europe-west3"
      [32m+[0m[0m metastore_status = (known after apply)
      [32m+[0m[0m name             = "sales"
      [32m+[0m[0m project          = "semantics-390012"
      [32m+[0m[0m service_account  = (known after apply)
      [32m+[0m[0m state            = (known after apply)
      [32m+[0m[0m uid              = (known after apply)
      [32m+[0m[0m update_time      = (known after apply)
    }

[1m  # module.bigquery[7].google_dataplex_zone.zone[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_zone" "zone" {
      [32m+[0m[0m asset_status = (known after apply)
      [32m+[0m[0m create_time  = (known after apply)
      [32m+[0m[0m display_name = "Zone for resources data"
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m labels       = {
          [32m+[0m[0m "level" = "resources"
        }
      [32m+[0m[0m lake         = "sales"
      [32m+[0m[0m location     = "europe-west3"
      [32m+[0m[0m name         = "resources"
      [32m+[0m[0m project      = "semantics-390012"
      [32m+[0m[0m state        = (known after apply)
      [32m+[0m[0m type         = "CURATED"
      [32m+[0m[0m uid          = (known after apply)
      [32m+[0m[0m update_time  = (known after apply)

      [32m+[0m[0m discovery_spec {
          [32m+[0m[0m enabled  = true
          [32m+[0m[0m schedule = (known after apply)
        }

      [32m+[0m[0m resource_spec {
          [32m+[0m[0m location_type = "SINGLE_REGION"
        }
    }

[1m  # module.bigquery[8].google_bigquery_dataset.dataset[0m will be created
[0m  [32m+[0m[0m resource "google_bigquery_dataset" "dataset" {
      [32m+[0m[0m creation_time              = (known after apply)
      [32m+[0m[0m dataset_id                 = "HR-source_aligned"
      [32m+[0m[0m default_collation          = (known after apply)
      [32m+[0m[0m delete_contents_on_destroy = false
      [32m+[0m[0m etag                       = (known after apply)
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m is_case_insensitive        = (known after apply)
      [32m+[0m[0m labels                     = {
          [32m+[0m[0m "domain"         = "HR"
          [32m+[0m[0m "level"          = "source_aligned"
          [32m+[0m[0m "provisioned_by" = "terraform"
        }
      [32m+[0m[0m last_modified_time         = (known after apply)
      [32m+[0m[0m location                   = "europe-west3"
      [32m+[0m[0m max_time_travel_hours      = (known after apply)
      [32m+[0m[0m project                    = "semantics-390012"
      [32m+[0m[0m self_link                  = (known after apply)
    }

[1m  # module.bigquery[8].google_dataplex_asset.asset[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_asset" "asset" {
      [32m+[0m[0m create_time      = (known after apply)
      [32m+[0m[0m dataplex_zone    = "source_aligned"
      [32m+[0m[0m discovery_status = (known after apply)
      [32m+[0m[0m display_name     = "HR-source_aligned Dataset Asset"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m labels           = {
          [32m+[0m[0m "domain" = "HR"
          [32m+[0m[0m "level"  = "source_aligned"
        }
      [32m+[0m[0m lake             = "HR"
      [32m+[0m[0m location         = "europe-west3"
      [32m+[0m[0m name             = "HR-source_aligned_dataset"
      [32m+[0m[0m project          = "semantics-390012"
      [32m+[0m[0m resource_status  = (known after apply)
      [32m+[0m[0m security_status  = (known after apply)
      [32m+[0m[0m state            = (known after apply)
      [32m+[0m[0m uid              = (known after apply)
      [32m+[0m[0m update_time      = (known after apply)

      [32m+[0m[0m discovery_spec {
          [32m+[0m[0m enabled = true
        }

      [32m+[0m[0m resource_spec {
          [32m+[0m[0m name = (known after apply)
          [32m+[0m[0m type = "BIGQUERY_DATASET"
        }
    }

[1m  # module.bigquery[8].google_dataplex_lake.lake[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_lake" "lake" {
      [32m+[0m[0m asset_status     = (known after apply)
      [32m+[0m[0m create_time      = (known after apply)
      [32m+[0m[0m display_name     = "Data Lake for HR domain"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m labels           = {
          [32m+[0m[0m "domain" = "HR"
        }
      [32m+[0m[0m location         = "europe-west3"
      [32m+[0m[0m metastore_status = (known after apply)
      [32m+[0m[0m name             = "HR"
      [32m+[0m[0m project          = "semantics-390012"
      [32m+[0m[0m service_account  = (known after apply)
      [32m+[0m[0m state            = (known after apply)
      [32m+[0m[0m uid              = (known after apply)
      [32m+[0m[0m update_time      = (known after apply)
    }

[1m  # module.bigquery[8].google_dataplex_zone.zone[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_zone" "zone" {
      [32m+[0m[0m asset_status = (known after apply)
      [32m+[0m[0m create_time  = (known after apply)
      [32m+[0m[0m display_name = "Zone for source_aligned data"
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m labels       = {
          [32m+[0m[0m "level" = "source_aligned"
        }
      [32m+[0m[0m lake         = "HR"
      [32m+[0m[0m location     = "europe-west3"
      [32m+[0m[0m name         = "source_aligned"
      [32m+[0m[0m project      = "semantics-390012"
      [32m+[0m[0m state        = (known after apply)
      [32m+[0m[0m type         = "CURATED"
      [32m+[0m[0m uid          = (known after apply)
      [32m+[0m[0m update_time  = (known after apply)

      [32m+[0m[0m discovery_spec {
          [32m+[0m[0m enabled  = true
          [32m+[0m[0m schedule = (known after apply)
        }

      [32m+[0m[0m resource_spec {
          [32m+[0m[0m location_type = "SINGLE_REGION"
        }
    }

[1m  # module.bigquery[9].google_bigquery_dataset.dataset[0m will be created
[0m  [32m+[0m[0m resource "google_bigquery_dataset" "dataset" {
      [32m+[0m[0m creation_time              = (known after apply)
      [32m+[0m[0m dataset_id                 = "HR-transformed"
      [32m+[0m[0m default_collation          = (known after apply)
      [32m+[0m[0m delete_contents_on_destroy = false
      [32m+[0m[0m etag                       = (known after apply)
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m is_case_insensitive        = (known after apply)
      [32m+[0m[0m labels                     = {
          [32m+[0m[0m "domain"         = "HR"
          [32m+[0m[0m "level"          = "transformed"
          [32m+[0m[0m "provisioned_by" = "terraform"
        }
      [32m+[0m[0m last_modified_time         = (known after apply)
      [32m+[0m[0m location                   = "europe-west3"
      [32m+[0m[0m max_time_travel_hours      = (known after apply)
      [32m+[0m[0m project                    = "semantics-390012"
      [32m+[0m[0m self_link                  = (known after apply)
    }

[1m  # module.bigquery[9].google_dataplex_asset.asset[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_asset" "asset" {
      [32m+[0m[0m create_time      = (known after apply)
      [32m+[0m[0m dataplex_zone    = "transformed"
      [32m+[0m[0m discovery_status = (known after apply)
      [32m+[0m[0m display_name     = "HR-transformed Dataset Asset"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m labels           = {
          [32m+[0m[0m "domain" = "HR"
          [32m+[0m[0m "level"  = "transformed"
        }
      [32m+[0m[0m lake             = "HR"
      [32m+[0m[0m location         = "europe-west3"
      [32m+[0m[0m name             = "HR-transformed_dataset"
      [32m+[0m[0m project          = "semantics-390012"
      [32m+[0m[0m resource_status  = (known after apply)
      [32m+[0m[0m security_status  = (known after apply)
      [32m+[0m[0m state            = (known after apply)
      [32m+[0m[0m uid              = (known after apply)
      [32m+[0m[0m update_time      = (known after apply)

      [32m+[0m[0m discovery_spec {
          [32m+[0m[0m enabled = true
        }

      [32m+[0m[0m resource_spec {
          [32m+[0m[0m name = (known after apply)
          [32m+[0m[0m type = "BIGQUERY_DATASET"
        }
    }

[1m  # module.bigquery[9].google_dataplex_lake.lake[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_lake" "lake" {
      [32m+[0m[0m asset_status     = (known after apply)
      [32m+[0m[0m create_time      = (known after apply)
      [32m+[0m[0m display_name     = "Data Lake for HR domain"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m labels           = {
          [32m+[0m[0m "domain" = "HR"
        }
      [32m+[0m[0m location         = "europe-west3"
      [32m+[0m[0m metastore_status = (known after apply)
      [32m+[0m[0m name             = "HR"
      [32m+[0m[0m project          = "semantics-390012"
      [32m+[0m[0m service_account  = (known after apply)
      [32m+[0m[0m state            = (known after apply)
      [32m+[0m[0m uid              = (known after apply)
      [32m+[0m[0m update_time      = (known after apply)
    }

[1m  # module.bigquery[9].google_dataplex_zone.zone[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_zone" "zone" {
      [32m+[0m[0m asset_status = (known after apply)
      [32m+[0m[0m create_time  = (known after apply)
      [32m+[0m[0m display_name = "Zone for transformed data"
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m labels       = {
          [32m+[0m[0m "level" = "transformed"
        }
      [32m+[0m[0m lake         = "HR"
      [32m+[0m[0m location     = "europe-west3"
      [32m+[0m[0m name         = "transformed"
      [32m+[0m[0m project      = "semantics-390012"
      [32m+[0m[0m state        = (known after apply)
      [32m+[0m[0m type         = "CURATED"
      [32m+[0m[0m uid          = (known after apply)
      [32m+[0m[0m update_time  = (known after apply)

      [32m+[0m[0m discovery_spec {
          [32m+[0m[0m enabled  = true
          [32m+[0m[0m schedule = (known after apply)
        }

      [32m+[0m[0m resource_spec {
          [32m+[0m[0m location_type = "SINGLE_REGION"
        }
    }

[1m  # module.bigquery[10].google_bigquery_dataset.dataset[0m will be created
[0m  [32m+[0m[0m resource "google_bigquery_dataset" "dataset" {
      [32m+[0m[0m creation_time              = (known after apply)
      [32m+[0m[0m dataset_id                 = "HR-analytical"
      [32m+[0m[0m default_collation          = (known after apply)
      [32m+[0m[0m delete_contents_on_destroy = false
      [32m+[0m[0m etag                       = (known after apply)
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m is_case_insensitive        = (known after apply)
      [32m+[0m[0m labels                     = {
          [32m+[0m[0m "domain"         = "HR"
          [32m+[0m[0m "level"          = "analytical"
          [32m+[0m[0m "provisioned_by" = "terraform"
        }
      [32m+[0m[0m last_modified_time         = (known after apply)
      [32m+[0m[0m location                   = "europe-west3"
      [32m+[0m[0m max_time_travel_hours      = (known after apply)
      [32m+[0m[0m project                    = "semantics-390012"
      [32m+[0m[0m self_link                  = (known after apply)
    }

[1m  # module.bigquery[10].google_dataplex_asset.asset[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_asset" "asset" {
      [32m+[0m[0m create_time      = (known after apply)
      [32m+[0m[0m dataplex_zone    = "analytical"
      [32m+[0m[0m discovery_status = (known after apply)
      [32m+[0m[0m display_name     = "HR-analytical Dataset Asset"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m labels           = {
          [32m+[0m[0m "domain" = "HR"
          [32m+[0m[0m "level"  = "analytical"
        }
      [32m+[0m[0m lake             = "HR"
      [32m+[0m[0m location         = "europe-west3"
      [32m+[0m[0m name             = "HR-analytical_dataset"
      [32m+[0m[0m project          = "semantics-390012"
      [32m+[0m[0m resource_status  = (known after apply)
      [32m+[0m[0m security_status  = (known after apply)
      [32m+[0m[0m state            = (known after apply)
      [32m+[0m[0m uid              = (known after apply)
      [32m+[0m[0m update_time      = (known after apply)

      [32m+[0m[0m discovery_spec {
          [32m+[0m[0m enabled = true
        }

      [32m+[0m[0m resource_spec {
          [32m+[0m[0m name = (known after apply)
          [32m+[0m[0m type = "BIGQUERY_DATASET"
        }
    }

[1m  # module.bigquery[10].google_dataplex_lake.lake[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_lake" "lake" {
      [32m+[0m[0m asset_status     = (known after apply)
      [32m+[0m[0m create_time      = (known after apply)
      [32m+[0m[0m display_name     = "Data Lake for HR domain"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m labels           = {
          [32m+[0m[0m "domain" = "HR"
        }
      [32m+[0m[0m location         = "europe-west3"
      [32m+[0m[0m metastore_status = (known after apply)
      [32m+[0m[0m name             = "HR"
      [32m+[0m[0m project          = "semantics-390012"
      [32m+[0m[0m service_account  = (known after apply)
      [32m+[0m[0m state            = (known after apply)
      [32m+[0m[0m uid              = (known after apply)
      [32m+[0m[0m update_time      = (known after apply)
    }

[1m  # module.bigquery[10].google_dataplex_zone.zone[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_zone" "zone" {
      [32m+[0m[0m asset_status = (known after apply)
      [32m+[0m[0m create_time  = (known after apply)
      [32m+[0m[0m display_name = "Zone for analytical data"
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m labels       = {
          [32m+[0m[0m "level" = "analytical"
        }
      [32m+[0m[0m lake         = "HR"
      [32m+[0m[0m location     = "europe-west3"
      [32m+[0m[0m name         = "analytical"
      [32m+[0m[0m project      = "semantics-390012"
      [32m+[0m[0m state        = (known after apply)
      [32m+[0m[0m type         = "CURATED"
      [32m+[0m[0m uid          = (known after apply)
      [32m+[0m[0m update_time  = (known after apply)

      [32m+[0m[0m discovery_spec {
          [32m+[0m[0m enabled  = true
          [32m+[0m[0m schedule = (known after apply)
        }

      [32m+[0m[0m resource_spec {
          [32m+[0m[0m location_type = "SINGLE_REGION"
        }
    }

[1m  # module.bigquery[11].google_bigquery_dataset.dataset[0m will be created
[0m  [32m+[0m[0m resource "google_bigquery_dataset" "dataset" {
      [32m+[0m[0m creation_time              = (known after apply)
      [32m+[0m[0m dataset_id                 = "HR-resources"
      [32m+[0m[0m default_collation          = (known after apply)
      [32m+[0m[0m delete_contents_on_destroy = false
      [32m+[0m[0m etag                       = (known after apply)
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m is_case_insensitive        = (known after apply)
      [32m+[0m[0m labels                     = {
          [32m+[0m[0m "domain"         = "HR"
          [32m+[0m[0m "level"          = "resources"
          [32m+[0m[0m "provisioned_by" = "terraform"
        }
      [32m+[0m[0m last_modified_time         = (known after apply)
      [32m+[0m[0m location                   = "europe-west3"
      [32m+[0m[0m max_time_travel_hours      = (known after apply)
      [32m+[0m[0m project                    = "semantics-390012"
      [32m+[0m[0m self_link                  = (known after apply)
    }

[1m  # module.bigquery[11].google_dataplex_asset.asset[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_asset" "asset" {
      [32m+[0m[0m create_time      = (known after apply)
      [32m+[0m[0m dataplex_zone    = "resources"
      [32m+[0m[0m discovery_status = (known after apply)
      [32m+[0m[0m display_name     = "HR-resources Dataset Asset"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m labels           = {
          [32m+[0m[0m "domain" = "HR"
          [32m+[0m[0m "level"  = "resources"
        }
      [32m+[0m[0m lake             = "HR"
      [32m+[0m[0m location         = "europe-west3"
      [32m+[0m[0m name             = "HR-resources_dataset"
      [32m+[0m[0m project          = "semantics-390012"
      [32m+[0m[0m resource_status  = (known after apply)
      [32m+[0m[0m security_status  = (known after apply)
      [32m+[0m[0m state            = (known after apply)
      [32m+[0m[0m uid              = (known after apply)
      [32m+[0m[0m update_time      = (known after apply)

      [32m+[0m[0m discovery_spec {
          [32m+[0m[0m enabled = true
        }

      [32m+[0m[0m resource_spec {
          [32m+[0m[0m name = (known after apply)
          [32m+[0m[0m type = "BIGQUERY_DATASET"
        }
    }

[1m  # module.bigquery[11].google_dataplex_lake.lake[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_lake" "lake" {
      [32m+[0m[0m asset_status     = (known after apply)
      [32m+[0m[0m create_time      = (known after apply)
      [32m+[0m[0m display_name     = "Data Lake for HR domain"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m labels           = {
          [32m+[0m[0m "domain" = "HR"
        }
      [32m+[0m[0m location         = "europe-west3"
      [32m+[0m[0m metastore_status = (known after apply)
      [32m+[0m[0m name             = "HR"
      [32m+[0m[0m project          = "semantics-390012"
      [32m+[0m[0m service_account  = (known after apply)
      [32m+[0m[0m state            = (known after apply)
      [32m+[0m[0m uid              = (known after apply)
      [32m+[0m[0m update_time      = (known after apply)
    }

[1m  # module.bigquery[11].google_dataplex_zone.zone[0m will be created
[0m  [32m+[0m[0m resource "google_dataplex_zone" "zone" {
      [32m+[0m[0m asset_status = (known after apply)
      [32m+[0m[0m create_time  = (known after apply)
      [32m+[0m[0m display_name = "Zone for resources data"
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m labels       = {
          [32m+[0m[0m "level" = "resources"
        }
      [32m+[0m[0m lake         = "HR"
      [32m+[0m[0m location     = "europe-west3"
      [32m+[0m[0m name         = "resources"
      [32m+[0m[0m project      = "semantics-390012"
      [32m+[0m[0m state        = (known after apply)
      [32m+[0m[0m type         = "CURATED"
      [32m+[0m[0m uid          = (known after apply)
      [32m+[0m[0m update_time  = (known after apply)

      [32m+[0m[0m discovery_spec {
          [32m+[0m[0m enabled  = true
          [32m+[0m[0m schedule = (known after apply)
        }

      [32m+[0m[0m resource_spec {
          [32m+[0m[0m location_type = "SINGLE_REGION"
        }
    }

[1m  # module.datacatalog.google_data_catalog_tag_template.business_metadata["tag_template1"][0m will be created
[0m  [32m+[0m[0m resource "google_data_catalog_tag_template" "business_metadata" {
      [32m+[0m[0m display_name    = "tag_template1"
      [32m+[0m[0m force_delete    = true
      [32m+[0m[0m id              = (known after apply)
      [32m+[0m[0m name            = (known after apply)
      [32m+[0m[0m project         = "semantics-390012"
      [32m+[0m[0m region          = "europe-west3"
      [32m+[0m[0m tag_template_id = "tag_template1"

      [32m+[0m[0m fields {
          [32m+[0m[0m description  = (known after apply)
          [32m+[0m[0m display_name = "Data Level"
          [32m+[0m[0m field_id     = "data_level"
          [32m+[0m[0m is_required  = true
          [32m+[0m[0m name         = (known after apply)
          [32m+[0m[0m order        = 3

          [32m+[0m[0m type {
              [32m+[0m[0m primitive_type = (known after apply)

              [32m+[0m[0m enum_type {
                  [32m+[0m[0m allowed_values {
                      [32m+[0m[0m display_name = "analytical"
                    }
                  [32m+[0m[0m allowed_values {
                      [32m+[0m[0m display_name = "source_aligned"
                    }
                  [32m+[0m[0m allowed_values {
                      [32m+[0m[0m display_name = "transformed"
                    }
                }
            }
        }
      [32m+[0m[0m fields {
          [32m+[0m[0m description  = (known after apply)
          [32m+[0m[0m display_name = (known after apply)
          [32m+[0m[0m field_id     = "data_domain"
          [32m+[0m[0m is_required  = true
          [32m+[0m[0m name         = (known after apply)
          [32m+[0m[0m order        = 2

          [32m+[0m[0m type {
              [32m+[0m[0m primitive_type = "STRING"
            }
        }
      [32m+[0m[0m fields {
          [32m+[0m[0m description  = (known after apply)
          [32m+[0m[0m display_name = (known after apply)
          [32m+[0m[0m field_id     = "data_owner"
          [32m+[0m[0m is_required  = true
          [32m+[0m[0m name         = (known after apply)
          [32m+[0m[0m order        = 1

          [32m+[0m[0m type {
              [32m+[0m[0m primitive_type = "STRING"
            }
        }
    }

[1m  # module.dataform.google_dataform_repository.dataform_repository[0m will be created
[0m  [32m+[0m[0m resource "google_dataform_repository" "dataform_repository" {
      [32m+[0m[0m id      = (known after apply)
      [32m+[0m[0m name    = "dataform_repository"
      [32m+[0m[0m project = (known after apply)

      [32m+[0m[0m git_remote_settings {
          [32m+[0m[0m authentication_token_secret_version = (known after apply)
          [32m+[0m[0m default_branch                      = "main"
          [32m+[0m[0m token_status                        = (known after apply)
          [32m+[0m[0m url                                 = "https://github.com"
        }
    }

[1m  # module.dataform.google_project_iam_member.dataform_service_account[0][0m will be created
[0m  [32m+[0m[0m resource "google_project_iam_member" "dataform_service_account" {
      [32m+[0m[0m etag    = (known after apply)
      [32m+[0m[0m id      = (known after apply)
      [32m+[0m[0m member  = "serviceAccount:service-889453783545@gcp-sa-dataform.iam.gserviceaccount.com"
      [32m+[0m[0m project = "semantics-390012"
      [32m+[0m[0m role    = "roles/bigquery.user"
    }

[1m  # module.dataform.google_project_iam_member.dataform_service_account[1][0m will be created
[0m  [32m+[0m[0m resource "google_project_iam_member" "dataform_service_account" {
      [32m+[0m[0m etag    = (known after apply)
      [32m+[0m[0m id      = (known after apply)
      [32m+[0m[0m member  = "serviceAccount:service-889453783545@gcp-sa-dataform.iam.gserviceaccount.com"
      [32m+[0m[0m project = "semantics-390012"
      [32m+[0m[0m role    = "roles/bigquery.dataEditor"
    }

[1m  # module.dataform.google_project_iam_member.dataform_service_account[2][0m will be created
[0m  [32m+[0m[0m resource "google_project_iam_member" "dataform_service_account" {
      [32m+[0m[0m etag    = (known after apply)
      [32m+[0m[0m id      = (known after apply)
      [32m+[0m[0m member  = "serviceAccount:service-889453783545@gcp-sa-dataform.iam.gserviceaccount.com"
      [32m+[0m[0m project = "semantics-390012"
      [32m+[0m[0m role    = "roles/bigquery.connectionuser"
    }

[1m  # module.dataform.google_secret_manager_secret.secret[0m will be created
[0m  [32m+[0m[0m resource "google_secret_manager_secret" "secret" {
      [32m+[0m[0m create_time = (known after apply)
      [32m+[0m[0m expire_time = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = (known after apply)
      [32m+[0m[0m project     = (known after apply)
      [32m+[0m[0m secret_id   = "dataform_secret"

      [32m+[0m[0m replication {
          [32m+[0m[0m user_managed {
              [32m+[0m[0m replicas {
                  [32m+[0m[0m location = "europe-west3"
                }
            }
        }
    }

[1m  # module.dataform.google_secret_manager_secret_version.secret_version[0m will be created
[0m  [32m+[0m[0m resource "google_secret_manager_secret_version" "secret_version" {
      [32m+[0m[0m create_time  = (known after apply)
      [32m+[0m[0m destroy_time = (known after apply)
      [32m+[0m[0m enabled      = true
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m name         = (known after apply)
      [32m+[0m[0m secret       = (known after apply)
      [32m+[0m[0m secret_data  = (sensitive value)
      [32m+[0m[0m version      = (known after apply)
    }

[1m  # module.tagging.data.archive_file.source[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "archive_file" "source" {
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m output_base64sha256 = (known after apply)
      [32m+[0m[0m output_base64sha512 = (known after apply)
      [32m+[0m[0m output_md5          = (known after apply)
      [32m+[0m[0m output_path         = "/tmp/tagging.zip"
      [32m+[0m[0m output_sha          = (known after apply)
      [32m+[0m[0m output_sha256       = (known after apply)
      [32m+[0m[0m output_sha512       = (known after apply)
      [32m+[0m[0m output_size         = (known after apply)
      [32m+[0m[0m source_dir          = "./functions/tagging"
      [32m+[0m[0m type                = "zip"
    }

[1m  # module.tagging.google_bigquery_connection.tagging[0m will be created
[0m  [32m+[0m[0m resource "google_bigquery_connection" "tagging" {
      [32m+[0m[0m connection_id  = "tagging"
      [32m+[0m[0m description    = "Connection required for the tagging remote function"
      [32m+[0m[0m has_credential = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m location       = "europe-west3"
      [32m+[0m[0m name           = (known after apply)
      [32m+[0m[0m project        = "semantics-390012"

      [32m+[0m[0m cloud_resource {
          [32m+[0m[0m service_account_id = (known after apply)
        }
    }

[1m  # module.tagging.google_bigquery_dataset.resources[0m will be created
[0m  [32m+[0m[0m resource "google_bigquery_dataset" "resources" {
      [32m+[0m[0m creation_time              = (known after apply)
      [32m+[0m[0m dataset_id                 = "resources"
      [32m+[0m[0m default_collation          = (known after apply)
      [32m+[0m[0m delete_contents_on_destroy = false
      [32m+[0m[0m etag                       = (known after apply)
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m is_case_insensitive        = (known after apply)
      [32m+[0m[0m labels                     = (known after apply)
      [32m+[0m[0m last_modified_time         = (known after apply)
      [32m+[0m[0m location                   = "europe-west3"
      [32m+[0m[0m max_time_travel_hours      = (known after apply)
      [32m+[0m[0m project                    = "semantics-390012"
      [32m+[0m[0m self_link                  = (known after apply)
    }

[1m  # module.tagging.google_bigquery_job.deploy_remote_functions_job[0m will be created
[0m  [32m+[0m[0m resource "google_bigquery_job" "deploy_remote_functions_job" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m job_id     = (known after apply)
      [32m+[0m[0m job_type   = (known after apply)
      [32m+[0m[0m location   = "europe-west3"
      [32m+[0m[0m project    = (known after apply)
      [32m+[0m[0m status     = (known after apply)
      [32m+[0m[0m user_email = (known after apply)

      [32m+[0m[0m query {
          [32m+[0m[0m priority        = "INTERACTIVE"
          [32m+[0m[0m query           = "CALL resources.deploy_tagging();"
          [32m+[0m[0m use_query_cache = true
        }
    }

[1m  # module.tagging.google_bigquery_routine.routine_deploy_functions[0m will be created
[0m  [32m+[0m[0m resource "google_bigquery_routine" "routine_deploy_functions" {
      [32m+[0m[0m creation_time      = (known after apply)
      [32m+[0m[0m dataset_id         = "resources"
      [32m+[0m[0m definition_body    = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m language           = "SQL"
      [32m+[0m[0m last_modified_time = (known after apply)
      [32m+[0m[0m project            = (known after apply)
      [32m+[0m[0m routine_id         = "deploy_tagging"
      [32m+[0m[0m routine_type       = "PROCEDURE"
    }

[1m  # module.tagging.google_cloud_run_service_iam_member.bigquery_connection_service_account[0m will be created
[0m  [32m+[0m[0m resource "google_cloud_run_service_iam_member" "bigquery_connection_service_account" {
      [32m+[0m[0m etag     = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m location = "europe-west3"
      [32m+[0m[0m member   = (known after apply)
      [32m+[0m[0m project  = "semantics-390012"
      [32m+[0m[0m role     = "roles/run.invoker"
      [32m+[0m[0m service  = (known after apply)
    }

[1m  # module.tagging.google_cloudfunctions2_function.function[0m will be created
[0m  [32m+[0m[0m resource "google_cloudfunctions2_function" "function" {
      [32m+[0m[0m environment = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m location    = "europe-west3"
      [32m+[0m[0m name        = "tagging"
      [32m+[0m[0m project     = "semantics-390012"
      [32m+[0m[0m state       = (known after apply)
      [32m+[0m[0m update_time = (known after apply)
      [32m+[0m[0m url         = (known after apply)

      [32m+[0m[0m build_config {
          [32m+[0m[0m build                 = (known after apply)
          [32m+[0m[0m entry_point           = "process_request"
          [32m+[0m[0m environment_variables = (known after apply)
          [32m+[0m[0m runtime               = "python311"

          [32m+[0m[0m source {
              [32m+[0m[0m storage_source {
                  [32m+[0m[0m bucket = "semantics-390012-resources"
                  [32m+[0m[0m object = (known after apply)
                }
            }
        }

      [32m+[0m[0m service_config {
          [32m+[0m[0m all_traffic_on_latest_revision   = true
          [32m+[0m[0m available_cpu                    = "2"
          [32m+[0m[0m available_memory                 = "1Gi"
          [32m+[0m[0m environment_variables            = {
              [32m+[0m[0m "TAG_TEMPLATE_ID"      = "tag_template1"
              [32m+[0m[0m "TAG_TEMPLATE_PROJECT" = "semantics-390012"
              [32m+[0m[0m "TAG_TEMPLATE_REGION"  = "europe-west3"
            }
          [32m+[0m[0m gcf_uri                          = (known after apply)
          [32m+[0m[0m ingress_settings                 = "ALLOW_INTERNAL_ONLY"
          [32m+[0m[0m max_instance_count               = 3
          [32m+[0m[0m max_instance_request_concurrency = 80
          [32m+[0m[0m min_instance_count               = 1
          [32m+[0m[0m service                          = (known after apply)
          [32m+[0m[0m service_account_email            = (known after apply)
          [32m+[0m[0m timeout_seconds                  = 60
          [32m+[0m[0m uri                              = (known after apply)
        }
    }

[1m  # module.tagging.google_storage_bucket_object.zip[0m will be created
[0m  [32m+[0m[0m resource "google_storage_bucket_object" "zip" {
      [32m+[0m[0m bucket         = "semantics-390012-resources"
      [32m+[0m[0m content_type   = "application/zip"
      [32m+[0m[0m crc32c         = (known after apply)
      [32m+[0m[0m detect_md5hash = "different hash"
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m kms_key_name   = (known after apply)
      [32m+[0m[0m md5hash        = (known after apply)
      [32m+[0m[0m media_link     = (known after apply)
      [32m+[0m[0m name           = (known after apply)
      [32m+[0m[0m output_name    = (known after apply)
      [32m+[0m[0m self_link      = (known after apply)
      [32m+[0m[0m source         = "/tmp/tagging.zip"
      [32m+[0m[0m storage_class  = (known after apply)
    }

[1m  # module.tagging.random_string.random[0m will be created
[0m  [32m+[0m[0m resource "random_string" "random" {
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m length      = 16
      [32m+[0m[0m lower       = true
      [32m+[0m[0m min_lower   = 0
      [32m+[0m[0m min_numeric = 0
      [32m+[0m[0m min_special = 0
      [32m+[0m[0m min_upper   = 0
      [32m+[0m[0m number      = true
      [32m+[0m[0m numeric     = true
      [32m+[0m[0m result      = (known after apply)
      [32m+[0m[0m special     = false
      [32m+[0m[0m upper       = true
    }

[1m  # module.tagging.module.cf_service_account[0].google_project_iam_member.service_account_roles[0m will be created
[0m  [32m+[0m[0m resource "google_project_iam_member" "service_account_roles" {
      [32m+[0m[0m etag    = (known after apply)
      [32m+[0m[0m id      = (known after apply)
      [32m+[0m[0m member  = (known after apply)
      [32m+[0m[0m project = "semantics-390012"
      [32m+[0m[0m role    = "roles/logging.logWriter"
    }

[1m  # module.tagging.module.cf_service_account[0].google_service_account.service_account[0m will be created
[0m  [32m+[0m[0m resource "google_service_account" "service_account" {
      [32m+[0m[0m account_id   = "cf-service-account"
      [32m+[0m[0m disabled     = false
      [32m+[0m[0m display_name = "SA to be used for Cloud Function tagging"
      [32m+[0m[0m email        = (known after apply)
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m member       = (known after apply)
      [32m+[0m[0m name         = (known after apply)
      [32m+[0m[0m project      = "semantics-390012"
      [32m+[0m[0m unique_id    = (known after apply)
    }

[1m  # module.tagging.module.cf_service_account[1].google_project_iam_member.service_account_roles[0m will be created
[0m  [32m+[0m[0m resource "google_project_iam_member" "service_account_roles" {
      [32m+[0m[0m etag    = (known after apply)
      [32m+[0m[0m id      = (known after apply)
      [32m+[0m[0m member  = (known after apply)
      [32m+[0m[0m project = "semantics-390012"
      [32m+[0m[0m role    = "roles/artifactregistry.reader"
    }

[1m  # module.tagging.module.cf_service_account[1].google_service_account.service_account[0m will be created
[0m  [32m+[0m[0m resource "google_service_account" "service_account" {
      [32m+[0m[0m account_id   = "cf-service-account"
      [32m+[0m[0m disabled     = false
      [32m+[0m[0m display_name = "SA to be used for Cloud Function tagging"
      [32m+[0m[0m email        = (known after apply)
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m member       = (known after apply)
      [32m+[0m[0m name         = (known after apply)
      [32m+[0m[0m project      = "semantics-390012"
      [32m+[0m[0m unique_id    = (known after apply)
    }

[1m  # module.tagging.module.cf_service_account[2].google_project_iam_member.service_account_roles[0m will be created
[0m  [32m+[0m[0m resource "google_project_iam_member" "service_account_roles" {
      [32m+[0m[0m etag    = (known after apply)
      [32m+[0m[0m id      = (known after apply)
      [32m+[0m[0m member  = (known after apply)
      [32m+[0m[0m project = "semantics-390012"
      [32m+[0m[0m role    = "roles/datacatalog.tagEditor"
    }

[1m  # module.tagging.module.cf_service_account[2].google_service_account.service_account[0m will be created
[0m  [32m+[0m[0m resource "google_service_account" "service_account" {
      [32m+[0m[0m account_id   = "cf-service-account"
      [32m+[0m[0m disabled     = false
      [32m+[0m[0m display_name = "SA to be used for Cloud Function tagging"
      [32m+[0m[0m email        = (known after apply)
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m member       = (known after apply)
      [32m+[0m[0m name         = (known after apply)
      [32m+[0m[0m project      = "semantics-390012"
      [32m+[0m[0m unique_id    = (known after apply)
    }

[1m  # module.tagging.module.cf_service_account[3].google_project_iam_member.service_account_roles[0m will be created
[0m  [32m+[0m[0m resource "google_project_iam_member" "service_account_roles" {
      [32m+[0m[0m etag    = (known after apply)
      [32m+[0m[0m id      = (known after apply)
      [32m+[0m[0m member  = (known after apply)
      [32m+[0m[0m project = "semantics-390012"
      [32m+[0m[0m role    = "roles/datacatalog.tagTemplateUser"
    }

[1m  # module.tagging.module.cf_service_account[3].google_service_account.service_account[0m will be created
[0m  [32m+[0m[0m resource "google_service_account" "service_account" {
      [32m+[0m[0m account_id   = "cf-service-account"
      [32m+[0m[0m disabled     = false
      [32m+[0m[0m display_name = "SA to be used for Cloud Function tagging"
      [32m+[0m[0m email        = (known after apply)
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m member       = (known after apply)
      [32m+[0m[0m name         = (known after apply)
      [32m+[0m[0m project      = "semantics-390012"
      [32m+[0m[0m unique_id    = (known after apply)
    }

[1m  # module.tagging.module.cf_service_account[4].google_project_iam_member.service_account_roles[0m will be created
[0m  [32m+[0m[0m resource "google_project_iam_member" "service_account_roles" {
      [32m+[0m[0m etag    = (known after apply)
      [32m+[0m[0m id      = (known after apply)
      [32m+[0m[0m member  = (known after apply)
      [32m+[0m[0m project = "semantics-390012"
      [32m+[0m[0m role    = "roles/datacatalog.viewer"
    }

[1m  # module.tagging.module.cf_service_account[4].google_service_account.service_account[0m will be created
[0m  [32m+[0m[0m resource "google_service_account" "service_account" {
      [32m+[0m[0m account_id   = "cf-service-account"
      [32m+[0m[0m disabled     = false
      [32m+[0m[0m display_name = "SA to be used for Cloud Function tagging"
      [32m+[0m[0m email        = (known after apply)
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m member       = (known after apply)
      [32m+[0m[0m name         = (known after apply)
      [32m+[0m[0m project      = "semantics-390012"
      [32m+[0m[0m unique_id    = (known after apply)
    }

[1mPlan:[0m 93 to add, 0 to change, 0 to destroy.
[0m[90m
─────────────────────────────────────────────────────────────────────────────[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
